---
import MetaTags, { type MetaProps } from "../layouts/MetaTags.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import Projects from "../components/Projects.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../consts";
import { getCollection } from "astro:content";
import { Position } from "../components/react/Positions";
import PageLayout from "../layouts/PageLayout.astro";

const allPositions = await getCollection("position");
const allEducation = await getCollection("education");
const allCertifications = await getCollection("certification");
const monthMap: { [key: string]: string } = {
  Jan: "01",
  Feb: "02",
  Mar: "03",
  Apr: "04",
  May: "05",
  Jun: "06",
  Jul: "07",
  Aug: "08",
  Sep: "09",
  Oct: "10",
  Nov: "11",
  Dec: "12",
};

const parseDateString = (dateStr: string): Date => {
  const [month, year] = dateStr.split(" ");
  return new Date(`${year}-${monthMap[month]}-01`);
};

allPositions.sort(
  (a, b) =>
    parseDateString(b.data.from).getTime() -
    parseDateString(a.data.from).getTime()
);

allEducation.sort(
  (a, b) =>
    parseDateString(b.data.from).getTime() -
    parseDateString(a.data.from).getTime()
);

allCertifications.sort(
  (a, b) =>
    parseDateString(b.data.from).getTime() -
    parseDateString(a.data.from).getTime()
);
const meta: MetaProps = {
  title: "Julian Beck",
  description: "Julian Beck, Student, FullStack and iOS Developer",
};
---

<PageLayout meta={meta}>
  <div class="flex items-center justify-between">
    <h1 class="flex text-4xl font-bold text-white">Julian Beck</h1>
  </div>
  <span class="mb-5 font-medium text-gray-300 wh">
    <!-- prettier-ignore -->
          Cloud Platform Engineer @<spa
      class="underline decoration-sky-500"
      href="https://inovex.de/">{"inovex"}</spa
    >. Interested in all stuff DevOps, Cloud, Golang as well as iOS-Development.
  </span>
  <h2 class="mt-8 mb-3 text-2xl font-bold text-white">Personal Projects</h2>
  <!-- <motion.div
				  variants={{
					hidden: { opacity: 1, scale: 1 },
					visible: {
					  opacity: 1,
					  scale: 1,
					  transition: {
						delay: 0,
						easings: "backOut",
						staggerChildren: 0.2,
					  },
					},
				  }}
				  initial="hidden"
				  animate="visible"
				  class="grid grid-cols-1 gap-3 sm:grid-cols-3"
				>
				  <Project
					name="Pi-Stock-DE"
					url="https://pi.juli.sh"
					style={{ scale }}
					color="#ff5d62"
					description="Get notified when a raspberry pi is in stock in german stores"
					logo={
					  <img
						class="w-20 transition-transform duration-500 transform group-hover:scale-110"
						src="/PiScraper.png"
						alt="Localpdf.tech Logo"
					  />
					}
					tags={
					  <div class="mt-2">
						<span class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium leading-4 bg-gray-100 text-gray-800 mr-2">
						  React
						</span>
						<span class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium leading-4 bg-blue-100 text-blue-800 mr-2">
						  Go
						</span>
						<span class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium leading-4 bg-indigo-100 text-indigo-800 mr-2">
						  Kubernetes
						</span>
					  </div>
					}
				  />
				  <Project
					name="LocalPDF"
					url="https://localpdf.tech"
					style={{ scale }}
					color="#2091c5"
					description="Web App to merge multiple PDF Files into one File, locally, using Webassembly and PDFCPU"
					logo={
					  <img
						class="w-16 transition-transform duration-500 transform group-hover:scale-110"
						src="/PDFLogo.png"
						alt="Localpdf.tech Logo"
					  />
					}
					tags={
					  <div class="mt-2">
						<span class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium leading-4 bg-gray-100 text-gray-800 mr-2">
						  React
						</span>
						<span class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium leading-4 bg-blue-100 text-blue-800 mr-2">
						  Nextjs
						</span>
						<span class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium leading-4 bg-indigo-100 text-indigo-800 mr-2">
						  Webassembly
						</span>
						<span class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium leading-4 bg-green-100 text-green-800 mr-2">
						  Go
						</span>
					  </div>
					}
				  />
		  
				  <Project
					name="Score Tracker"
					url="https://apps.apple.com/de/app/score-tracking-and-statistics/id1497662306?l=en"
					style={{ scale }}
					color="#eff6eb"
					description="Score Tracker to track all kind of Game Scores and generate Statistics"
					logo={
					  <img
						class="w-16 rounded-lg transition-transform duration-500 transform group-hover:scale-110"
						src="/TournamentsLogo.png"
						alt="Tournaments Logo"
					  />
					}
					tags={
					  <div class="mt-2">
						<span class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium leading-4 bg-gray-100 text-gray-800 mr-2">
						  iOS
						</span>
						<span class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium leading-4 bg-blue-100 text-blue-800 mr-2">
						  SwiftUI
						</span>
						<span class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium leading-4 bg-indigo-100 text-indigo-800 mr-2">
						  CoreData
						</span>
						<span class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium leading-4 bg-green-100 text-green-800 mr-2">
						  CloudKit
						</span>
					  </div>
					}
				  />
				  <Project
					name="IWI-Checker"
					url="https://github.com/jufabeck2202/HSKA-App"
					style={{ scale }}
					color="#fa8f87"
					description="Open Source App for my University to check Information and Grades using Widgets"
					logo={
					  <img
						class="w-16 rounded-lg transition-transform duration-500 transform group-hover:scale-110"
						src="/CheckerLogo.png"
						alt="Checker Logo"
					  />
					}
					tags={
					  <div class="mt-2">
						<span class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium leading-4 bg-gray-100 text-gray-800 mr-2">
						  iOS
						</span>
						<span class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium leading-4 bg-blue-100 text-blue-800 mr-2">
						  Swift
						</span>
						<span class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium leading-4 bg-indigo-100 text-indigo-800 mr-2">
						  SwiftUI
						</span>
						<span class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium leading-4 bg-green-100 text-green-800 mr-2">
						  WidgetKit
						</span>
					  </div>
					}
				  />
				  <Project
					name="WhatStats"
					color="#c5acfa"
					url="https://apps.apple.com/de/app/whatstats-chat-analyser/id1481007233?l=en"
					style={{ scale }}
					description="WhatStats is an app to analyse WhatsApp Chats locally on your device"
					logo={
					  <img
						class="w-16 transition-transform rounded-lg duration-500 transform group-hover:scale-110"
						src="/WhatStatLogo.png"
						alt="WhatStat Logo"
					  />
					}
					tags={
					  <div class="mt-2">
						<span class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium leading-4 bg-gray-100 text-gray-800 mr-2">
						  iOS
						</span>
						<span class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium leading-4 bg-blue-100 text-blue-800 mr-2">
						  Swift
						</span>
						<span class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium leading-4 bg-indigo-100 text-indigo-800 mr-2">
						  SwiftUI
						</span>
					  </div>
					}
				  />
				</motion.div> -->
  <h2 class="mt-8 mb-3 text-2xl font-bold text-white">Work Experience</h2>
  <div
    class="inline-block w-full max-w-full overflow-hidden align-middle rounded-md shadow-md shadow-zinc-600"
  >
    <table class="w-full">
      <tbody class="border-cyan-50">
        {
          allPositions.map((position) => (
            <Position
              company={position.data.company}
              position={position.data.position}
              description={position.data.description}
              url={position.data.url}
              from={position.data.from}
              to={position.data.to}
              logo={position.data.logo}
            />
          ))
        }
      </tbody>
    </table>
  </div>
  <h2 class="mt-8 mb-3 text-2xl font-bold text-white">Certifications</h2>
  <div
    class="inline-block w-full max-w-full overflow-hidden align-middle rounded-md shadow-md shadow-zinc-600"
  >
    <table class="w-full">
      <tbody class="">
        {
          allCertifications.map((certification) => (
            <Position
              company={certification.data.company}
              position={certification.data.position}
              description={certification.data.description}
              url={certification.data.url}
              from={certification.data.from}
              to={certification.data.to}
              logo={certification.data.logo}
            />
          ))
        }
      </tbody>
    </table>
  </div>
  <h2 class="mt-8 mb-3 text-2xl font-bold text-white">Education</h2>
  <div
    class="inline-block w-full max-w-full overflow-hidden align-middle rounded-md shadow-md shadow-zinc-600"
  >
    <table class="w-full">
      <tbody class="">
        {
          allEducation.map((education) => (
            <Position
              company={education.data.company}
              position={education.data.position}
              description={education.data.description}
              url={education.data.url}
              from={education.data.from}
              to={education.data.to}
              logo={education.data.logo}
            />
          ))
        }
      </tbody>
    </table>
  </div>
  <h2 class="mt-8 mb-3 text-2xl font-bold text-white">Contact</h2>
  <div class="text-base text-gray-100">
    If you are interested in contacting me, drop me a short email:{" "}
    <a
      target="_blank"
      class="underline decoration-sky-500"
      href="mailto:mail@julianbeck.com"
    >
      <b>mail@julianbeck.com</b>
    </a>
  </div>
</PageLayout>
